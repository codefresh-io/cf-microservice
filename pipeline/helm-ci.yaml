version: '1.0'

steps:

  resolve_chart_details:
    title: resolve chart details - name, version, appVersion
    image: codefresh/plugin-helm:2.8.1
    commands:
    # find first folder with Chart.yaml and get it's name
    - CHART_NAME=$(find . -name "Chart.yaml" | sort | head -n 1 | awk -F '[/]' '{print $2}')
    # get package version
    - "VERSION=$(grep \"version: \" $CHART_NAME/Chart.yaml | awk '{print $2}')"
    # get appVersion from latest tag; fallback to appVersion value in Chart.yaml
    - "APP_VERSION=$(git describe --abbrev=0 2> /dev/null || grep \"appVersion: \" $CHART_NAME/Chart.yaml | awk '{print $2}')"
    - if [ -z "$APP_VERSION" ]; then APP_VERSION=$VERSION; fi
    # get Helm Repo path
    # - HELM_REPO=$(env | grep "chartmuseum" | grep "codefresh.io" | awk -F'=' '{print $2}')
    - HELM_REPO=${{HELM_REPO}}
    # export section
    - echo export chart details
    - cf_export CHART_NAME=$CHART_NAME
    - cf_export VERSION=$VERSION
    - cf_export APP_VERSION=$APP_VERSION
    - cf_export HELM_REPO=$HELM_REPO

  patch_chart_version:
    title: patch chart version for non-master; add branch after patch
    image: codefresh/plugin-helm:2.8.1
    commands:
    - BRANCH=${{CF_BRANCH}}
    # construct SemVer with branch, replace '_' since it's not allowed by SemVer 2.0
    - cf_export VERSION=$VERSION-${BRANCH//_/-}
    when:
      branch:
        ignore:
          - master

  package_chart:
    title: package chart
    image: codefresh/plugin-helm:2.8.1
    commands:
    # init helm
    - helm init --client-only
    # add codefresh chart repositories for absolute reference
    - helm repo add cf-dev http://chartmuseum-dev.codefresh.io
    - helm repo add cf-stable http://chartmuseum.codefresh.io
    # add helm repository for codefresh: develop or stable
    - helm repo add codefresh $HELM_REPO
    # build chart dependency acording to requirements.lock file, if USE_LOCK is true
    # or use latest if not
    # TODO: verify child packages signatures
    - if [ "$USE_LOCK" == "true" ]; then helm dependency build $CHART_NAME; else helm dependency update $CHART_NAME; fi
    # lint helm chart
    - helm lint $CHART_NAME
    # create package with APP_VERSION
    - helm package --app-version $APP_VERSION --version $VERSION $CHART_NAME
    # TODO: sign package

  update_chart_repo:
    title: update chart in repository
    image: codefresh/plugin-helm:2.8.1
    commands:
    - PACKAGE=$CHART_NAME-$VERSION.tgz
    - curl -X POST --user ${{BASIC_AUTH_USER}}:${{BASIC_AUTH_PASS}} --fail --data-binary "@$PACKAGE" $HELM_REPO/api/charts || $IGNORE_UPDATE_ERROR
